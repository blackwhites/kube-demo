apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    log_format elasticsearch_proxy_json '{ '
                                        '"@timestamp": "$time_iso8601", '
                                        '"server_name": "$server_name", '
                                        '"server_port": "$server_port", '
                                        '"remote_addr": "$remote_addr", '
                                        '"remote_user": "$remote_user", '
                                        '"body_bytes_sent": "$body_bytes_sent", '
                                        '"request_time": "$request_time", '
                                        '"status": "$status", '
                                        '"request": "$request", '
                                        '"request_method": "$request_method", '
                                        '"http_host":"$http_host", '
                                        '"http_referrer": "$http_referer", '
                                        '"http_user_agent": "$http_user_agent", '
                                        '"request_time": "$request_time" '
                                        '}';
    server {
        listen       80;
        server_name  localhost;

        access_log /var/log/nginx/access.log elasticsearch_proxy_json;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: nginx-pdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: nginx
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  template:
    metadata:
      annotations:
        prometheus.io/probe: 'true'
        prometheus.io/scrape: 'true'
      labels:
        app: nginx
    spec:

      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - nginx
              topologyKey: "kubernetes.io/hostname"

      initContainers:
      - name: delay-startup
        image: busybox
        command: ['sh', '-c', 'DELAY_COUNT=0; while [ $DELAY_COUNT -lt 10 ]; do let DELAY_COUNT=DELAY_COUNT+1; echo Delaying startup $DELAY_COUNT / 10; sleep 2; done;']

      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/conf.d

      volumes:
          - name: config-volume
            configMap:
              name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
